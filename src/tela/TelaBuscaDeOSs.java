/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tela;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.OrdemDeServico;
import modelos.Peca;
import modelos.Servico;
import persistencia.ManipulaBancoOrdemServico;
import persistencia.ManipulaBancoPecas;
import persistencia.ManipulaBancoServicos;

/**
 *
 * @author ALUNO
 */
public class TelaBuscaDeOSs extends javax.swing.JFrame {

    /**
     * Creates new form TelaBuscaDeOSs
     */
    public TelaBuscaDeOSs() {
        initComponents();
        loadTableOSs(0);
    }

    private void loadTableOSs(int idVeiculo) {
        try {
            DefaultTableModel table = (DefaultTableModel) jTableOss.getModel();
            table.setRowCount(0);// * zerando a tabela para não duplicar dados da tabela
            if (idVeiculo != 0) {
                ArrayList<OrdemDeServico> listaOrdensServicos = new ManipulaBancoOrdemServico().buscarTodos(idVeiculo);
                if (listaOrdensServicos == null) {//    * caso não tenha nada para mostrar na telas
                    return;//   * cancelar o método
                }
                for (OrdemDeServico os : listaOrdensServicos) {
                    Servico servicoFeito = new ManipulaBancoServicos().buscar(os.getIdServico());
                    double valorMaoDeObra = 0;
                    if (servicoFeito == null) {//   * caso não tenha encontrado o serviço usado na OS
                        JOptionPane.showMessageDialog(rootPane, "Falha no carregamento da tabela, uma Ordem de serviço foi encontrada sem ter um serviço conectado a ela");
                        return;//   * cancelar o carregamento da tabela
                    }
                    valorMaoDeObra = servicoFeito.getValorMaoDeObra();
                    Peca pecaUsada = new ManipulaBancoPecas().buscar(os.getIdPeca());
                    if (pecaUsada != null) {
                        int quantidadePecaUsada = os.getQuantidadePeca();
                        double valorPecas = pecaUsada.getValorPeca();
                        double valorTotal = valorMaoDeObra + (valorPecas * quantidadePecaUsada);
                        table.addRow(new Object[]{os.getDefeitoRelatado(), servicoFeito.getNomeServico(),
                            valorMaoDeObra, pecaUsada.getDescricao(), quantidadePecaUsada, valorPecas, valorTotal});
                    } else {
                        table.addRow(new Object[]{os.getDefeitoRelatado(), servicoFeito.getNomeServico(),
                            valorMaoDeObra, "----", 0, 0, valorMaoDeObra});
                    }
                }
            } else {
                ArrayList<OrdemDeServico> listaOrdensServicos = new ManipulaBancoOrdemServico().buscarTodos();
                if (listaOrdensServicos == null) {//    * caso não tenha nada para mostrar na telas
                    return;//   * cancelar o método
                }
                for (OrdemDeServico os : listaOrdensServicos) {
                    Servico servicoFeito = new ManipulaBancoServicos().buscar(os.getIdServico());
                    double valorMaoDeObra = 0;
                    if (servicoFeito == null) {//   * caso não tenha encontrado o serviço usado na OS
                        JOptionPane.showMessageDialog(rootPane, "Falha no carregamento da tabela, uma Ordem de serviço foi encontrada sem ter um serviço conectado a ela");
                        return;//   * cancelar o carregamento da tabela
                    }
                    valorMaoDeObra = servicoFeito.getValorMaoDeObra();

                    Peca pecaUsada = new ManipulaBancoPecas().buscar(os.getIdPeca());
                    if (pecaUsada != null) {
                        int quantidadePecaUsada = os.getQuantidadePeca();
                        double valorPecas = pecaUsada.getValorPeca();
                        double valorTotal = valorMaoDeObra + (valorPecas * quantidadePecaUsada);
                        table.addRow(new Object[]{os.getDefeitoRelatado(), servicoFeito.getNomeServico(),
                            valorMaoDeObra, pecaUsada.getDescricao(), quantidadePecaUsada, valorPecas, valorTotal});
                    } else {
                        table.addRow(new Object[]{os.getDefeitoRelatado(), servicoFeito.getNomeServico(),
                            valorMaoDeObra, "----", 0, 0, valorMaoDeObra});
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableOss = new javax.swing.JTable();
        jButtonVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableOss.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descrição do defeito", "Serviço executado", "valor mão de obra", "peça usada", "quantidade usada", "valor unitário", "valor total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableOss);

        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(133, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonVoltar)
                .addGap(143, 143, 143))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonVoltar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        new TelaInicial().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaBuscaDeOSs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaBuscaDeOSs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaBuscaDeOSs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaBuscaDeOSs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaBuscaDeOSs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableOss;
    // End of variables declaration//GEN-END:variables
}
